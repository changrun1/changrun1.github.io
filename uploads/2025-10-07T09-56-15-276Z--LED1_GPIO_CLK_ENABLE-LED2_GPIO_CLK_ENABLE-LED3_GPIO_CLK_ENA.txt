  LED1_GPIO_CLK_ENABLE();
  LED2_GPIO_CLK_ENABLE();
  LED3_GPIO_CLK_ENABLE();
  LED4_GPIO_CLK_ENABLE();

  /* -2- Configure IOs in output push-pull mode to drive external LEDs */
  GPIO_InitStruct.Mode  = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull  = GPIO_PULLUP;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;

  GPIO_InitStruct.Pin = LED1_PIN;
  HAL_GPIO_Init(LED1_GPIO_PORT, &GPIO_InitStruct);

  GPIO_InitStruct.Pin = LED2_PIN;
  HAL_GPIO_Init(LED2_GPIO_PORT, &GPIO_InitStruct);

  GPIO_InitStruct.Pin = LED3_PIN;
  HAL_GPIO_Init(LED3_GPIO_PORT, &GPIO_InitStruct);

  GPIO_InitStruct.Pin = LED4_PIN;
  HAL_GPIO_Init(LED4_GPIO_PORT, &GPIO_InitStruct);
	
	//wakeup
	WAKEUP_BUTTON_GPIO_CLK_ENABLE();
	GPIO_InitStruct.Mode  = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull  = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
	
	GPIO_InitStruct.Pin = GPIO_PIN_0;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);

  /* -3- Toggle IOs in an infinite loop */
	 _Bool ON=1;
  while (1)
  {
	 
   if(HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)){

		 if(ON){
			 HAL_GPIO_WritePin(LED1_GPIO_PORT,LED1_PIN,1);
			 HAL_Delay(10);
				if(!HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)) {
				ON=0;
			 }
			 
		 }else{
			HAL_GPIO_WritePin(LED1_GPIO_PORT,LED1_PIN,0);
					 HAL_Delay(10);
				if(!HAL_GPIO_ReadPin(GPIOA,GPIO_PIN_0)) {
				ON=1;
			 }
			}	
		 }

  }
